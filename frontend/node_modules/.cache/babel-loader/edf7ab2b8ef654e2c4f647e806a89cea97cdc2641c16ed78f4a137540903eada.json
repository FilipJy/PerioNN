{"ast":null,"code":"var _jsxFileName = \"/Users/filip/NNweb/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [year, setYear] = useState(0);\n  const [issue, setIssue] = useState(0);\n  const [publisher, setPublisher] = useState('');\n  const [correctedPages, setCorrectedPages] = useState(0);\n  const [prediction, setPrediction] = useState(null);\n  const handlePredictSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://0.0.0.0:8000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `name=${name}&year=${year}&issue=${issue}&publisher=${publisher}`\n      });\n      const data = await response.json();\n      const predictedPages = data['Predicted Pages'];\n      // Round the predicted pages to a whole number\n      setPrediction(Math.floor(predictedPages));\n    } catch (error) {\n      console.error('Error predicting pages:', error);\n    }\n  };\n  const handleCorrectSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://0.0.0.0:8000/correct', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `corrected_pages=${correctedPages}`\n      });\n      const data = await response.json();\n      console.log(data['message']);\n    } catch (error) {\n      console.error('Error correcting and retraining:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"everything\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predict Pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePredictSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Year\",\n        value: year,\n        onChange: e => setYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Issue\",\n        value: issue,\n        onChange: e => setIssue(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Publisher\",\n        value: publisher,\n        onChange: e => setPublisher(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Predicted Pages: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Correct and Retrain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCorrectSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Corrected Pages\",\n        value: correctedPages,\n        onChange: e => setCorrectedPages(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Correct and Retrain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictForm, \"Fl4H4jzGxJPEfCdd/iCPl9R1MS4=\");\n_c = PredictForm;\nexport default PredictForm;\nvar _c;\n$RefreshReg$(_c, \"PredictForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PredictForm","_s","name","setName","year","setYear","issue","setIssue","publisher","setPublisher","correctedPages","setCorrectedPages","prediction","setPrediction","handlePredictSubmit","e","preventDefault","response","fetch","method","headers","body","data","json","predictedPages","Math","floor","error","console","handleCorrectSubmit","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/filip/NNweb/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction PredictForm() {\n  const [name, setName] = useState('');\n  const [year, setYear] = useState(0);\n  const [issue, setIssue] = useState(0);\n  const [publisher, setPublisher] = useState('');\n  const [correctedPages, setCorrectedPages] = useState(0);\n  const [prediction, setPrediction] = useState(null);\n\n  const handlePredictSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://0.0.0.0:8000/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: `name=${name}&year=${year}&issue=${issue}&publisher=${publisher}`,\n      });\n      const data = await response.json();\n      const predictedPages = data['Predicted Pages'];\n      // Round the predicted pages to a whole number\n      setPrediction(Math.floor(predictedPages));\n    } catch (error) {\n      console.error('Error predicting pages:', error);\n    }\n  };\n\n  const handleCorrectSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://0.0.0.0:8000/correct', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: `corrected_pages=${correctedPages}`,\n      });\n      const data = await response.json();\n      console.log(data['message']);\n    } catch (error) {\n      console.error('Error correcting and retraining:', error);\n    }\n  };\n\n  return (\n    <div className=\"everything\">\n      <h2>Predict Pages</h2>\n      <form onSubmit={handlePredictSubmit}>\n        <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n        <input type=\"number\" placeholder=\"Year\" value={year} onChange={(e) => setYear(e.target.value)} required />\n        <input type=\"number\" placeholder=\"Issue\" value={issue} onChange={(e) => setIssue(e.target.value)} required />\n        <input type=\"text\" placeholder=\"Publisher\" value={publisher} onChange={(e) => setPublisher(e.target.value)} required />\n        <button type=\"submit\">Predict</button>\n      </form>\n      {prediction && <p>Predicted Pages: {prediction}</p>}\n\n      <h2>Correct and Retrain</h2>\n      <form onSubmit={handleCorrectSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Corrected Pages\"\n          value={correctedPages}\n          onChange={(e) => setCorrectedPages(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Correct and Retrain</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PredictForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}